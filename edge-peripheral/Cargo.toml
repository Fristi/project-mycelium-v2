[package]
edition = "2021"
name    = "edge-peripheral"
version = "0.1.0"


[dependencies]
nb = "1.1.0"
shtcx = { git = "https://github.com/Fristi/shtcx-rs", rev = "d733731ff1e439459a8357310c85439ef9f64898" }
bh1730fvc = { git = "https://github.com/Fristi/bh1730fvc-rs", rev = "dff319f4aae9da82dcea45c1f2b2ecd347da31c9" }
timeseries = { git = "https://github.com/Fristi/timeseries", rev = "ca2808e7fef75f641ef82f50168ca0a1bc5e5c08" }
edge-protocol = { path = "../edge-protocol" }
bt-hci = { version = "0.2.1", features = ["defmt"] }
trouble-host = { version = "0.1.0", features = ["defmt", "gatt", "peripheral", "l2cap-tx-packet-pool-size-3"] }
critical-section = "1.2.0"
defmt = "1.0.1"
embassy-executor = { version = "0.7.0", features = [
  "defmt",
  "task-arena-size-20480",
] }
embassy-futures = { version = "0.1.1" }
embassy-time = { version = "0.4.0", features = ["defmt", "generic-queue-8"] }
embedded-io = "0.6.1"
embedded-io-async = "0.6.1"
embedded-hal = "1.0.0"
embedded-hal-bus = { version = "0.3.0", features = [] }
chrono = { version = "0.4.41", default-features = false }
embedded-hal-async = "1.0.0"
esp-alloc = "0.7.0"
esp-backtrace = { version = "0.15.1", features = [
  "defmt",
  "esp32",
  "exception-handler",
  "panic-handler",
] }
esp-hal = { version = "1.0.0-beta.0", features = [
  "defmt",
  "esp32",
  "unstable",
] }

esp-hal-embassy = { version = "0.7.0", features = ["esp32"] }
esp-println = { version = "0.13.0", features = ["defmt-espflash", "esp32"] }
esp-wifi = { version = "0.13.0", features = [
  "ble",
  "builtin-scheduler",
  "defmt",
  "esp-alloc",
  "esp32",
] }
heapless = { version = "0.8.0", default-features = false }
static_cell = { version = "2.1.0", features = ["nightly"] }
prost = { version = "0.13.5", default-features = false, features = ["derive"] }
prost-types = { version = "0.13.5", default-features = false }
embassy-sync = { version = "0.6.2", features = ["defmt"] }

[profile.dev.package.esp-storage]
opt-level = 3

[profile.dev]
# Rust debug is too slow.
# For debug builds always builds with some optimization
opt-level = "s"

[profile.release]
codegen-units    = 1     # LLVM can perform better optimizations using a single thread
debug            = 2
debug-assertions = false
incremental      = false
lto              = 'fat'
opt-level        = 's'
overflow-checks  = false
