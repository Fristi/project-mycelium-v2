/*
 * Mycelium API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Station {
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    #[serde(rename = "mac")]
    pub mac: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "location", skip_serializing_if = "Option::is_none")]
    pub location: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "userId")]
    pub user_id: String,
    #[serde(rename = "created")]
    pub created: String,
    #[serde(rename = "updated", skip_serializing_if = "Option::is_none")]
    pub updated: Option<String>,
}

impl Station {
    pub fn new(id: uuid::Uuid, mac: String, name: String, user_id: String, created: String) -> Station {
        Station {
            id,
            mac,
            name,
            location: None,
            description: None,
            user_id,
            created,
            updated: None,
        }
    }
}

