apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mycelium-backend.fullname" . }}
  labels:
    {{- include "mycelium-backend.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "mycelium-backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mycelium-backend.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ (.Files.Get "image-tag.yaml" | fromYaml).imageTag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            # PostgreSQL Database Configuration
            - name: PG_HOST
              value: {{ .Values.config.database.host | quote }}
            - name: PG_PORT
              value: {{ .Values.config.database.port | quote }}
            - name: PG_USER
              value: {{ .Values.config.database.username | quote }}
            - name: PG_DB
              value: {{ .Values.config.database.database | quote }}
            - name: PG_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.secrets.create }}{{ include "mycelium-backend.fullname" . }}-db-secret{{ else }}{{ .Values.secrets.databaseSecret }}{{ end }}
                  key: password
            # S3 Blob Storage Configuration
            - name: S3_HOST
              value: {{ .Values.config.s3.host | quote }}
            - name: S3_ACCESS_KEY
              value: {{ .Values.config.s3.accessKey | quote }}
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.secrets.create }}{{ include "mycelium-backend.fullname" . }}-s3-secret{{ else }}{{ .Values.secrets.s3Secret }}{{ end }}
                  key: secret
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}